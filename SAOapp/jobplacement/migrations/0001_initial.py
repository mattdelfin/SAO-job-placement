# Generated by Django 4.2.4 on 2024-05-12 02:15

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OJTHiring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100)),
                ('theme', models.CharField(default='', max_length=150)),
                ('date_of_event', models.DateField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('studID', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('lrn', models.PositiveBigIntegerField()),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('yearlvl', models.PositiveIntegerField(default='1')),
                ('sex', models.CharField(default='M', max_length=1)),
                ('contact', models.CharField(max_length=11, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='student_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='student_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['lastname', 'firstname'],
            },
        ),
        migrations.CreateModel(
            name='SeminarAttendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attended', models.BooleanField(default=False)),
                ('seminar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobplacement.seminar')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobplacement.studentuser')),
            ],
        ),
        migrations.CreateModel(
            name='OJTRequirements',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('non_disclosure', models.BooleanField(default=False)),
                ('biodata', models.BooleanField(default=False)),
                ('parents_consent', models.BooleanField(default=False)),
                ('application_letter', models.BooleanField(default=False)),
                ('medical', models.BooleanField(default=False)),
                ('moa', models.BooleanField(default=False)),
                ('endorsement', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobplacement.studentuser')),
            ],
        ),
        migrations.CreateModel(
            name='JobPlacementAdminUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, related_name='admin_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='admin_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
